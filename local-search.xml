<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Swift基础语法（一）</title>
    <link href="/2020/07/07/Swift%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/07/07/Swift%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h2 id="期末考试周"><a href="#期末考试周" class="headerlink" title="期末考试周"></a>期末考试周</h2><p>整理一下考试用到的Swift的基本语法，权当复习，一共会有四篇。本篇包含了注释，变量，常量，声明方式，数据类型，元祖，数组，字典。</p><a id="more"></a><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>Swift有两种注释方式:<br><code>单行注释</code></p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-comment">// 我是单行注释</span></code></pre></div><p><code>多行注释</code></p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-comment">/* 我是多行注释我是第二行*/</span></code></pre></div><h2 id="变量与常量"><a href="#变量与常量" class="headerlink" title="变量与常量"></a>变量与常量</h2><p>常量关键字为 <code>let</code> 常量不支持再进行赋值操作</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">let</span> <span class="hljs-type">PI</span> = <span class="hljs-number">3.1415926</span></code></pre></div><p>此时如果再给PI赋值，就会报错，这时候我们可以使用变量 <code>var</code></p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">var</span> wage = <span class="hljs-number">500</span>wage = <span class="hljs-number">700</span> <span class="hljs-comment">//将700再次赋值给wage，此时不会报错</span></code></pre></div><p>##声明方式：</p><p><code>隐式声明变量</code></p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> name = value</code></pre></div><p><code>显示声明变量</code></p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> name:type = value</code></pre></div><h2 id="命名规则"><a href="#命名规则" class="headerlink" title="命名规则"></a>命名规则</h2><p>如果没有一个有效的命名，回过头来就很可能忘了这个变量或者常量是做什么使用的，所以这时候我们需要<strong>命名规范</strong></p><p><code>小驼峰命名</code> 除了首个单词,其他单词首字母大写,拼接起来</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">var</span> currentBuildingHeight = <span class="hljs-number">26</span></code></pre></div><p><code>大驼峰命名</code>或者叫<code>帕斯卡命名</code> 所有的单词都首字母大写</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">var</span> <span class="hljs-type">CurrentBuildingHeight</span> = <span class="hljs-number">26</span></code></pre></div><p><code>下划线命名法</code> 用下划线🔗 所有单词</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">var</span> current_building_height = <span class="hljs-number">26</span></code></pre></div><p><code>常量的命名方式</code><br>所有字母全部大些，并皆适用下划线连接单词，用尽可能的名称描述出常量的意义</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">let</span> <span class="hljs-type">BUILDING_LEVEL_HEIGHT</span> = <span class="hljs-number">3</span> <span class="hljs-comment">//使用常量 描述层高</span></code></pre></div><h2 id="打印方式"><a href="#打印方式" class="headerlink" title="打印方式"></a>打印方式</h2><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">let</span> <span class="hljs-type">BUILDING_LEVEL_HEIGHT</span> = <span class="hljs-number">3</span><span class="hljs-built_in">print</span>(<span class="hljs-type">BUILDING_LEVEL_HEIGHT</span>)<span class="hljs-built_in">debugPrint</span>(<span class="hljs-type">BUILDING_LEVEL_HEIGHT</span>)<span class="hljs-built_in">dump</span>(<span class="hljs-type">BUILDING_LEVEL_HEIGHT</span>)   <span class="hljs-comment">//dump在打印class的时候，会输出class中的全部属性</span></code></pre></div><h2 id="基本的数据类型"><a href="#基本的数据类型" class="headerlink" title="基本的数据类型"></a>基本的数据类型</h2><p><strong>1、布尔类型 Bool</strong></p><p><code>Bool类型</code>用来表示true和false，不过和c语言中<strong>不一样</strong>的是，swift对于bool的定义只有true和false，不能通过1和0来代替。</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">var</span> bol:<span class="hljs-type">Bool</span> = <span class="hljs-literal">true</span> <span class="hljs-comment">//使用显式声明变量 bol，bol为true</span><span class="hljs-keyword">if</span>(bol){<span class="hljs-built_in">print</span>(<span class="hljs-string">"1"</span>) <span class="hljs-comment">//因为bol为true，所以执行语句print，输出1</span>}</code></pre></div><p><strong>2、整形 Int</strong></p><p><code>Int类型</code>用来表示整数</p><p>在32位系统中,Int类型代表了Int32,表示在内存中他存储的是32位长.<br>在64位系统中,Int类型代表了Int64,表示在内存中他存储的是64位长.</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">var</span> <span class="hljs-type">Interg</span>:<span class="hljs-type">Int</span> = <span class="hljs-type">Int</span>.<span class="hljs-built_in">max</span><span class="hljs-keyword">var</span> <span class="hljs-type">Max</span>:<span class="hljs-type">Int64</span> = <span class="hljs-type">Int64</span>.<span class="hljs-built_in">max</span> <span class="hljs-comment">//显示64位内存中储存的Int64长度 9223372036854775807</span></code></pre></div><p>以Int8为例，Int8的最大值应该是128，但因为会有来表示的符号的最高位，所以最大值为127</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">var</span> num:<span class="hljs-type">Int8</span> = <span class="hljs-type">Int8</span>.<span class="hljs-built_in">max</span> <span class="hljs-comment">//127</span></code></pre></div><p>无符号Int8,没有位数限制，故为255</p><div class="hljs"><pre><code class="hljs Swift"><span class="hljs-keyword">var</span> num:<span class="hljs-type">UInt8</span> = <span class="hljs-type">UInt8</span>.<span class="hljs-built_in">max</span> <span class="hljs-comment">//255</span></code></pre></div><p><strong>3、浮点型 Float\Double</strong></p><p><code>浮点型</code>用来存放小数，其中Float为单精度，存放32位；Double为双精度，存放64位<br>Double可以保证15位小数京都，Float保证6位小数精度，如果超出精确度会有问题</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> float:<span class="hljs-type">Float</span> = <span class="hljs-number">0.123456</span><span class="hljs-keyword">var</span> double:<span class="hljs-type">Double</span> = <span class="hljs-number">0.012345678912345</span></code></pre></div><p><strong>4、字符与字符串 String\Char</strong><br><code>String</code>用来存放一串字符，可以是字母，数字，符号等，使用<code>“”</code>双引号赋值。</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> str:<span class="hljs-type">String</span> = <span class="hljs-string">"hello，world！"</span></code></pre></div><p><code>Char</code>用来存放字符，是Charactor的缩写,同样用双引号赋值</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">let</span> char:<span class="hljs-type">String</span> = <span class="hljs-string">"H"</span></code></pre></div><p><strong>部分转义</strong><br>因为在一些情况下，直接使用符号可能会造成混乱导致编译失败，或者我们要实现别的功能，我们可以使用\来进行转义</p><div class="hljs"><pre><code class="hljs swift">\t 制表\r 回车\n 换行\' 单引号\'' 双引号\\ 反斜杠\<span class="hljs-number">0</span> 空字符</code></pre></div><h2 id="元祖-Tuple"><a href="#元祖-Tuple" class="headerlink" title="元祖 Tuple"></a>元祖 Tuple</h2><p><code>元祖</code>是多个元素相关联的一个对象，Tuple（Type1,Type2,…）</p><p><code>匿名元祖</code></p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> tuple1:(<span class="hljs-type">String</span>,<span class="hljs-type">Int</span>,<span class="hljs-type">Bool</span>) = (<span class="hljs-string">"张三"</span>,<span class="hljs-number">23</span>,<span class="hljs-literal">true</span>)<span class="hljs-comment">//匿名元祖只能点下标来取值</span>tuple1.<span class="hljs-number">0</span> <span class="hljs-comment">//输出为张三</span></code></pre></div><p><code>非匿名元祖</code> 优先使用</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> tuple2:(name:<span class="hljs-type">String</span>,age:<span class="hljs-type">Int</span>,gender:<span class="hljs-type">Bool</span>) = (name:<span class="hljs-string">"李四"</span>,age:<span class="hljs-number">24</span>,gender:<span class="hljs-literal">true</span>)tuple2.name<span class="hljs-comment">//输出为李四</span></code></pre></div><h2 id="数组-Array"><a href="#数组-Array" class="headerlink" title="数组 Array"></a>数组 Array</h2><p><code>数组</code>是一个同种类型的集合<br>数组的一种声明方式</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> array:<span class="hljs-type">Array</span><<span class="hljs-type">Int</span>> = <span class="hljs-type">Array</span><<span class="hljs-type">Int</span>>()</code></pre></div><p>数组的声明方式2</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> array2:[<span class="hljs-type">Int</span>] = [<span class="hljs-type">Int</span>]()</code></pre></div><p>直接声明</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> array3 = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]</code></pre></div><p>数组如何添加</p><div class="hljs"><pre><code class="hljs swift">array.append(<span class="hljs-number">0</span>)array.append(<span class="hljs-number">6</span>)array.append(<span class="hljs-number">8</span>)array.append(<span class="hljs-number">5</span>)</code></pre></div><p><strong>数组的下标(索引) 是从0开始计算的</strong></p><p>数组的访问</p><div class="hljs"><pre><code class="hljs swift">array[<span class="hljs-number">0</span>]array[<span class="hljs-number">1</span>]array[<span class="hljs-number">3</span>]</code></pre></div><p>数组的插入</p><div class="hljs"><pre><code class="hljs swift">array.insert(<span class="hljs-number">3</span>, at: <span class="hljs-number">0</span>) <span class="hljs-comment">//把数字3插入下标0</span></code></pre></div><p>数组删除</p><div class="hljs"><pre><code class="hljs swift">array.remove(at: <span class="hljs-number">3</span>)</code></pre></div><p>数组的排序</p><div class="hljs"><pre><code class="hljs swift">array.<span class="hljs-built_in">sort</span>(by:>)</code></pre></div><p><strong>多维数组</strong><br>声明方式1:</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> multiArray:[[<span class="hljs-type">Int</span>]] = [[<span class="hljs-type">Int</span>]]()</code></pre></div><p>声明方式2:</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> multiArray2 = [[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>],[<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>]]</code></pre></div><h2 id="字典-Dictionary"><a href="#字典-Dictionary" class="headerlink" title="字典 Dictionary"></a>字典 Dictionary</h2><p><code>Dictionary</code>是以键值对的方式存储数据</p><div class="hljs"><pre><code class="hljs swift"><span class="hljs-keyword">var</span> dic:<span class="hljs-type">Dictionary</span><<span class="hljs-type">String</span>,<span class="hljs-type">Int</span>> = <span class="hljs-type">Dictionary</span><<span class="hljs-type">String</span>,<span class="hljs-type">Int</span>>()<span class="hljs-comment">//新华字典 用名字找页号的例子</span>dic[<span class="hljs-string">"安"</span>] = <span class="hljs-number">7</span>dic[<span class="hljs-string">"周"</span>] = <span class="hljs-number">361</span></code></pre></div><p>字典如何移除</p><div class="hljs"><pre><code class="hljs swift">dic.remove(at: dic.index(forKey: <span class="hljs-string">"周"</span>)!)</code></pre></div><p>显示字典的键、值</p><div class="hljs"><pre><code class="hljs swift">dic.valuesdic.keys</code></pre></div><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>Swift</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>联想小新13Pro 更换开机页面</title>
    <link href="/2020/06/24/%E8%81%94%E6%83%B3%E5%B0%8F%E6%96%B0Pro13%20%E6%9B%B4%E6%8D%A2%E5%BC%80%E6%9C%BA%E9%A1%B5%E9%9D%A2/"/>
    <url>/2020/06/24/%E8%81%94%E6%83%B3%E5%B0%8F%E6%96%B0Pro13%20%E6%9B%B4%E6%8D%A2%E5%BC%80%E6%9C%BA%E9%A1%B5%E9%9D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么要修改？"><a href="#为什么要修改？" class="headerlink" title="为什么要修改？"></a>为什么要修改？</h2><p>联想小新的开机页面太丑了，找遍论坛也没有个替换方法。研究了一下，发现修改开机logo是要更改BIOS的，找遍网络发现一个开源工具<code>HackBGRT</code>，可以很快的实现。（请先看注意事项，再操作）</p><a id="more"></a><p><del>（原本的开机页面像天猫logo不说，还是七彩的）</del></p><h2 id="步骤一：下载开源软件HackBGRT"><a href="#步骤一：下载开源软件HackBGRT" class="headerlink" title="步骤一：下载开源软件HackBGRT"></a>步骤一：下载开源软件HackBGRT</h2><p>在发布页面下好软件后，解压。</p><p><img src="/img/thkj02.png" srcset="/img/loading.gif" alt="下载解压"></p><blockquote><ul><li>GitHub地址 ：<a href="https://github.com/Metabolix/HackBGRT/releases" target="_blank" rel="noopener">https://github.com/Metabolix/HackBGRT/releases</a></li></ul></blockquote><h2 id="步骤二：安装软件"><a href="#步骤二：安装软件" class="headerlink" title="步骤二：安装软件"></a>步骤二：安装软件</h2><p>需要使用管理员权限来打开Setup.exe，在弹出的cmd窗口下，输入<strong>I (大写)</strong>，来进行安装，安装过后会弹出一个文本文档，我们选择关闭。</p><p><img src="/img/thkj03.png" srcset="/img/loading.gif" alt="安装软件"></p><h2 id="步骤三：修改图片"><a href="#步骤三：修改图片" class="headerlink" title="步骤三：修改图片"></a>步骤三：修改图片</h2><p>正常来说，上一步操作过后会弹出一个画图的窗口，这时候我们就可以把我们想要的开机图片提前修改好，然后<strong>拷贝</strong>到里面，覆盖掉原始图片，保存即可。</p><p><img src="/img/thkj04.png" srcset="/img/loading.gif" alt="修改图片"></p><h2 id="步骤四：完成-amp-注意事项"><a href="#步骤四：完成-amp-注意事项" class="headerlink" title="步骤四：完成&注意事项"></a>步骤四：完成&注意事项</h2><p>重启即可，我们可以看到现在的开机页面已经变成了我们修改的图片。<del>（果然联想电脑还是应该用联想的logo）</del></p><p><img src="/img/thkj05.png" srcset="/img/loading.gif" alt="完成"></p><hr><h2 id="注意事项（请优先观看）"><a href="#注意事项（请优先观看）" class="headerlink" title="注意事项（请优先观看）"></a>注意事项（请优先观看）</h2><p>1.系统需要为UEFI引导，请提前查看Boot Mode启动方式<br>2.需要关闭Secure Boot (既把Secure Boot设置为Disabled)<br>3.请直接替换画图里的图片，并非软件目录中的splash.bmp<br>4.如果需要换回原来的的开机画面，只需要再次Setup.exe 输入 R 即可恢复<br>5.如果不走运无法开机，请使用系统恢复修复启动问题。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从网易云导入音乐到Apple Music</title>
    <link href="/2019/07/22/%E4%BB%8E%E7%BD%91%E6%98%93%E4%BA%91%E5%AF%BC%E5%85%A5%E9%9F%B3%E4%B9%90%E5%88%B0Apple-music/"/>
    <url>/2019/07/22/%E4%BB%8E%E7%BD%91%E6%98%93%E4%BA%91%E5%AF%BC%E5%85%A5%E9%9F%B3%E4%B9%90%E5%88%B0Apple-music/</url>
    
    <content type="html"><![CDATA[<p>随着<code>网易云音乐</code>的版权越来越少，功能越来越臃肿，歌词被和谐，我决定换到<code>Apple Music</code>一段时间试试，但由于网易云每个歌单都有好几百首音乐，如果一首一首的导入太麻烦了，便开始研究如何将歌单完美导入。</p><a id="more"></a> <p>采用的方法是：<code>Apple Music</code>资料库里有的音乐，使用<code>TunemyMusic</code>来导入，库里没有的音乐使用<code>iCloud音乐库</code>来进行云播放。</p><p>下面是具体方法：</p><h2 id="步骤一：下载浏览器的油猴插件"><a href="#步骤一：下载浏览器的油猴插件" class="headerlink" title="步骤一：下载浏览器的油猴插件"></a>步骤一：下载浏览器的油猴插件</h2><p><img src="/img/wa11.png" srcset="/img/loading.gif" alt="header"></p><blockquote><ul><li>油猴安装教程 ：<a href="https://zhuanlan.zhihu.com/p/52182666" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/52182666</a></li></ul></blockquote><h2 id="步骤二：安装油猴脚本，并启动"><a href="#步骤二：安装油猴脚本，并启动" class="headerlink" title="步骤二：安装油猴脚本，并启动"></a>步骤二：安装油猴脚本，并启动</h2><p><img src="/img/wa12.png" srcset="/img/loading.gif" alt="header"></p><blockquote><ul><li>安装网址 ：<a href="http://t.cn/AilEhyvb" target="_blank" rel="noopener">http://t.cn/AilEhyvb</a></li></ul></blockquote><h2 id="步骤三：网易云分享歌单，导出txt格式文件"><a href="#步骤三：网易云分享歌单，导出txt格式文件" class="headerlink" title="步骤三：网易云分享歌单，导出txt格式文件"></a>步骤三：网易云分享歌单，导出txt格式文件</h2><p><img src="/img/wa13.png" srcset="/img/loading.gif" alt="header"><br>以链接的方式分享你想要导入<code>Apple Music</code>的歌单，用安装了油猴脚本的浏览器打开，选择导出。<br><img src="/img/wa14.png" srcset="/img/loading.gif" alt="header"><br>下载后打开，会获得如下所示：<br><img src="/img/wa15.png" srcset="/img/loading.gif" alt="header"></p><h2 id="步骤四：使用TunemyMusic来导入音乐到Apple-Music"><a href="#步骤四：使用TunemyMusic来导入音乐到Apple-Music" class="headerlink" title="步骤四：使用TunemyMusic来导入音乐到Apple Music"></a>步骤四：使用TunemyMusic来导入音乐到Apple Music</h2><blockquote><ul><li>进入官网 ：<a href="https://www.tunemymusic.com/zh-cn/" target="_blank" rel="noopener">https://www.tunemymusic.com/zh-cn/</a></li></ul></blockquote><p>在来源选择中选择<code>从文本</code>：<br><img src="/img/wa16.png" srcset="/img/loading.gif" alt="header"><br>如图所示，将刚才的文本内容粘贴至此：<br><img src="/img/wa17.png" srcset="/img/loading.gif" alt="header"><br>选择目的地为<code>Apple Music</code>，并登录<code>Apple ID</code>：<br><img src="/img/wa18.png" srcset="/img/loading.gif" alt="header"><br>登陆完成就可以看到已经开始向<code>Apple Music</code>添加了，剩下的等着就好。<br><img src="/img/wa19.png" srcset="/img/loading.gif" alt="header"><br>其余导入失败可以从网易云下载，使用<code>iTunes</code>播放，就会自动添加进<code>iCloud音乐库</code>了。<br><img src="/img/wa110.png" srcset="/img/loading.gif" alt="header"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
    <tags>
      
      <tag>日常</tag>
      
      <tag>小技巧</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2019/07/18/hello-world/"/>
    <url>/2019/07/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>花了3个晚上终于把这个鬼东西整的差不多了。<br>不知道写点儿啥，就先这样子。</p><a id="more"></a> <hr><p><img src="/img/demo.jpg" srcset="/img/loading.gif" alt="header"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
